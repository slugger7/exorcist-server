//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Playlists = newPlaylistsTable("", "Playlists", "")

type playlistsTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnInteger
	Name      sqlite.ColumnString
	CreatedAt sqlite.ColumnString
	UserId    sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type PlaylistsTable struct {
	playlistsTable

	EXCLUDED playlistsTable
}

// AS creates new PlaylistsTable with assigned alias
func (a PlaylistsTable) AS(alias string) *PlaylistsTable {
	return newPlaylistsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlaylistsTable with assigned schema name
func (a PlaylistsTable) FromSchema(schemaName string) *PlaylistsTable {
	return newPlaylistsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlaylistsTable with assigned table prefix
func (a PlaylistsTable) WithPrefix(prefix string) *PlaylistsTable {
	return newPlaylistsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlaylistsTable with assigned table suffix
func (a PlaylistsTable) WithSuffix(suffix string) *PlaylistsTable {
	return newPlaylistsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlaylistsTable(schemaName, tableName, alias string) *PlaylistsTable {
	return &PlaylistsTable{
		playlistsTable: newPlaylistsTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newPlaylistsTableImpl("", "excluded", ""),
	}
}

func newPlaylistsTableImpl(schemaName, tableName, alias string) playlistsTable {
	var (
		IDColumn        = sqlite.IntegerColumn("Id")
		NameColumn      = sqlite.StringColumn("Name")
		CreatedAtColumn = sqlite.StringColumn("CreatedAt")
		UserIdColumn    = sqlite.IntegerColumn("UserId")
		allColumns      = sqlite.ColumnList{IDColumn, NameColumn, CreatedAtColumn, UserIdColumn}
		mutableColumns  = sqlite.ColumnList{NameColumn, CreatedAtColumn, UserIdColumn}
	)

	return playlistsTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Name:      NameColumn,
		CreatedAt: CreatedAtColumn,
		UserId:    UserIdColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
