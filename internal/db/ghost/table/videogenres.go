//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var VideoGenres = newVideoGenresTable("", "VideoGenres", "")

type videoGenresTable struct {
	sqlite.Table

	// Columns
	ID      sqlite.ColumnInteger
	VideoId sqlite.ColumnInteger
	GenreId sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type VideoGenresTable struct {
	videoGenresTable

	EXCLUDED videoGenresTable
}

// AS creates new VideoGenresTable with assigned alias
func (a VideoGenresTable) AS(alias string) *VideoGenresTable {
	return newVideoGenresTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new VideoGenresTable with assigned schema name
func (a VideoGenresTable) FromSchema(schemaName string) *VideoGenresTable {
	return newVideoGenresTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new VideoGenresTable with assigned table prefix
func (a VideoGenresTable) WithPrefix(prefix string) *VideoGenresTable {
	return newVideoGenresTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new VideoGenresTable with assigned table suffix
func (a VideoGenresTable) WithSuffix(suffix string) *VideoGenresTable {
	return newVideoGenresTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newVideoGenresTable(schemaName, tableName, alias string) *VideoGenresTable {
	return &VideoGenresTable{
		videoGenresTable: newVideoGenresTableImpl(schemaName, tableName, alias),
		EXCLUDED:         newVideoGenresTableImpl("", "excluded", ""),
	}
}

func newVideoGenresTableImpl(schemaName, tableName, alias string) videoGenresTable {
	var (
		IDColumn       = sqlite.IntegerColumn("Id")
		VideoIdColumn  = sqlite.IntegerColumn("VideoId")
		GenreIdColumn  = sqlite.IntegerColumn("GenreId")
		allColumns     = sqlite.ColumnList{IDColumn, VideoIdColumn, GenreIdColumn}
		mutableColumns = sqlite.ColumnList{VideoIdColumn, GenreIdColumn}
	)

	return videoGenresTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		VideoId: VideoIdColumn,
		GenreId: GenreIdColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
