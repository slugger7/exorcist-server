//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Progress = newProgressTable("", "Progress", "")

type progressTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnInteger
	Timestamp sqlite.ColumnFloat
	VideoId   sqlite.ColumnInteger
	UserId    sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type ProgressTable struct {
	progressTable

	EXCLUDED progressTable
}

// AS creates new ProgressTable with assigned alias
func (a ProgressTable) AS(alias string) *ProgressTable {
	return newProgressTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ProgressTable with assigned schema name
func (a ProgressTable) FromSchema(schemaName string) *ProgressTable {
	return newProgressTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ProgressTable with assigned table prefix
func (a ProgressTable) WithPrefix(prefix string) *ProgressTable {
	return newProgressTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ProgressTable with assigned table suffix
func (a ProgressTable) WithSuffix(suffix string) *ProgressTable {
	return newProgressTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newProgressTable(schemaName, tableName, alias string) *ProgressTable {
	return &ProgressTable{
		progressTable: newProgressTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newProgressTableImpl("", "excluded", ""),
	}
}

func newProgressTableImpl(schemaName, tableName, alias string) progressTable {
	var (
		IDColumn        = sqlite.IntegerColumn("Id")
		TimestampColumn = sqlite.FloatColumn("Timestamp")
		VideoIdColumn   = sqlite.IntegerColumn("VideoId")
		UserIdColumn    = sqlite.IntegerColumn("UserId")
		allColumns      = sqlite.ColumnList{IDColumn, TimestampColumn, VideoIdColumn, UserIdColumn}
		mutableColumns  = sqlite.ColumnList{TimestampColumn, VideoIdColumn, UserIdColumn}
	)

	return progressTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Timestamp: TimestampColumn,
		VideoId:   VideoIdColumn,
		UserId:    UserIdColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
