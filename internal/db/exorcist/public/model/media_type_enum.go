//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type MediaTypeEnum string

const (
	MediaTypeEnum_Primary MediaTypeEnum = "primary"
	MediaTypeEnum_Asset   MediaTypeEnum = "asset"
)

var MediaTypeEnumAllValues = []MediaTypeEnum{
	MediaTypeEnum_Primary,
	MediaTypeEnum_Asset,
}

func (e *MediaTypeEnum) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "primary":
		*e = MediaTypeEnum_Primary
	case "asset":
		*e = MediaTypeEnum_Asset
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for MediaTypeEnum enum")
	}

	return nil
}

func (e MediaTypeEnum) String() string {
	return string(e)
}
