//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type LibraryTypeEnum string

const (
	LibraryTypeEnum_Image LibraryTypeEnum = "image"
	LibraryTypeEnum_Video LibraryTypeEnum = "video"
	LibraryTypeEnum_Mixed LibraryTypeEnum = "mixed"
)

var LibraryTypeEnumAllValues = []LibraryTypeEnum{
	LibraryTypeEnum_Image,
	LibraryTypeEnum_Video,
	LibraryTypeEnum_Mixed,
}

func (e *LibraryTypeEnum) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "image":
		*e = LibraryTypeEnum_Image
	case "video":
		*e = LibraryTypeEnum_Video
	case "mixed":
		*e = LibraryTypeEnum_Mixed
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for LibraryTypeEnum enum")
	}

	return nil
}

func (e LibraryTypeEnum) String() string {
	return string(e)
}
