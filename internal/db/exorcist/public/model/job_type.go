//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type JobType string

const (
	JobType_UpdateExistingVideos JobType = "update_existing_videos"
	JobType_ScanPath             JobType = "scan_path"
	JobType_GenerateChecksum     JobType = "generate_checksum"
)

var JobTypeAllValues = []JobType{
	JobType_UpdateExistingVideos,
	JobType_ScanPath,
	JobType_GenerateChecksum,
}

func (e *JobType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "update_existing_videos":
		*e = JobType_UpdateExistingVideos
	case "scan_path":
		*e = JobType_ScanPath
	case "generate_checksum":
		*e = JobType_GenerateChecksum
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for JobType enum")
	}

	return nil
}

func (e JobType) String() string {
	return string(e)
}
