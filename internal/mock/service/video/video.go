// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/video/video.go
//
// Generated by this command:
//
//	mockgen -source=./internal/service/video/video.go
//

// Package mock_videoService is a generated GoMock package.
package mock_videoService

import (
	reflect "reflect"

	uuid "github.com/google/uuid"
	model "github.com/slugger7/exorcist/internal/db/exorcist/public/model"
	models "github.com/slugger7/exorcist/internal/models"
	videoRepository "github.com/slugger7/exorcist/internal/repository/video"
	gomock "go.uber.org/mock/gomock"
)

// MockIVideoService is a mock of IVideoService interface.
type MockIVideoService struct {
	ctrl     *gomock.Controller
	recorder *MockIVideoServiceMockRecorder
	isgomock struct{}
}

// MockIVideoServiceMockRecorder is the mock recorder for MockIVideoService.
type MockIVideoServiceMockRecorder struct {
	mock *MockIVideoService
}

// NewMockIVideoService creates a new mock instance.
func NewMockIVideoService(ctrl *gomock.Controller) *MockIVideoService {
	mock := &MockIVideoService{ctrl: ctrl}
	mock.recorder = &MockIVideoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIVideoService) EXPECT() *MockIVideoServiceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockIVideoService) GetAll() ([]model.Video, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]model.Video)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIVideoServiceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIVideoService)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockIVideoService) GetById(id uuid.UUID) (*model.Video, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*model.Video)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockIVideoServiceMockRecorder) GetById(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockIVideoService)(nil).GetById), id)
}

// GetByIdWithLibraryPath mocks base method.
func (m *MockIVideoService) GetByIdWithLibraryPath(id uuid.UUID) (*videoRepository.VideoLibraryPathModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIdWithLibraryPath", id)
	ret0, _ := ret[0].(*videoRepository.VideoLibraryPathModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIdWithLibraryPath indicates an expected call of GetByIdWithLibraryPath.
func (mr *MockIVideoServiceMockRecorder) GetByIdWithLibraryPath(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIdWithLibraryPath", reflect.TypeOf((*MockIVideoService)(nil).GetByIdWithLibraryPath), id)
}

// GetOverview mocks base method.
func (m *MockIVideoService) GetOverview() ([]models.VideoOverviewDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOverview")
	ret0, _ := ret[0].([]models.VideoOverviewDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOverview indicates an expected call of GetOverview.
func (mr *MockIVideoServiceMockRecorder) GetOverview() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOverview", reflect.TypeOf((*MockIVideoService)(nil).GetOverview))
}
