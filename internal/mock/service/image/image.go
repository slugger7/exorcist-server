// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/image/image.go
//
// Generated by this command:
//
//	mockgen -source=./internal/service/image/image.go
//

// Package mock_imageService is a generated GoMock package.
package mock_imageService

import (
	reflect "reflect"

	uuid "github.com/google/uuid"
	model "github.com/slugger7/exorcist/internal/db/exorcist/public/model"
	gomock "go.uber.org/mock/gomock"
)

// MockIImageService is a mock of IImageService interface.
type MockIImageService struct {
	ctrl     *gomock.Controller
	recorder *MockIImageServiceMockRecorder
	isgomock struct{}
}

// MockIImageServiceMockRecorder is the mock recorder for MockIImageService.
type MockIImageServiceMockRecorder struct {
	mock *MockIImageService
}

// NewMockIImageService creates a new mock instance.
func NewMockIImageService(ctrl *gomock.Controller) *MockIImageService {
	mock := &MockIImageService{ctrl: ctrl}
	mock.recorder = &MockIImageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIImageService) EXPECT() *MockIImageServiceMockRecorder {
	return m.recorder
}

// GetById mocks base method.
func (m *MockIImageService) GetById(arg0 uuid.UUID) (*model.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", arg0)
	ret0, _ := ret[0].(*model.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockIImageServiceMockRecorder) GetById(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockIImageService)(nil).GetById), arg0)
}
