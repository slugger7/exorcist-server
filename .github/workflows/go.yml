# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'

    - name: Build
      run: go build -v ./cmd/exorcist

    - name: Load cached FFmpeg
      id: cache-ffmpeg
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/bin/ffmpeg
          /usr/local/bin/ffprobe
        key: ${{ runner.os }}-ffmpeg-6.0.1

    - name: Setup FFmpeg if not cached
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      run: |
        VERSION=6.0.1
        RELEASE_NAME=ffmpeg-${VERSION}-amd64-static
        wget --timeout=8 --tries=30 https://www.johnvansickle.com/ffmpeg/old-releases/${RELEASE_NAME}.tar.xz
        tar -xf ${RELEASE_NAME}.tar.xz
        mv ${RELEASE_NAME}/ffmpeg ${RELEASE_NAME}/ffprobe /usr/local/bin/
        rm -rf ${RELEASE_NAME}
      
    - name: Test
      run: go test -v ./...

    - name: Install tygo
      run: go install github.com/gzuidhof/tygo@v0.2.18

    - name: Generate FE Types
      run: make dtos
